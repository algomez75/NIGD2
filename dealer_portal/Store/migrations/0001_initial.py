# Generated by Django 5.0.1 on 2024-02-04 01:29

import Store.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('terms_and_conditions', models.FileField(blank=True, upload_to='terms_and_conditions')),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='FrameColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frame_color', models.CharField(max_length=255)),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='GlassCoating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glass_coating', models.CharField(max_length=255)),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='GlassColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glass_color', models.CharField(max_length=255)),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='GlassConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glass_config', models.CharField(max_length=255)),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='GlassType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('glass_type', models.CharField(max_length=255)),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Privacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy', models.CharField(max_length=255)),
                ('additional_cost', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('number', models.IntegerField(editable=False, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, validators=[django.core.validators.EmailValidator('Enter a valid email address.')])),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number. Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.CharField(max_length=100)),
                ('logotype', models.ImageField(blank=True, null=True, upload_to='dealer_logos/')),
                ('discount', models.DecimalField(decimal_places=2, default=0, help_text='Discount percentage for the dealer', max_digits=5)),
                ('shipping_address', models.CharField(blank=True, max_length=100, verbose_name='Shipping address')),
                ('method_of_payment', models.CharField(choices=[('debit', 'Debit card'), ('credit', 'Credit card'), ('cash', 'Cash on delivery')], default='debit', max_length=100)),
                ('terms_and_conditions', models.BooleanField(default=False, verbose_name='Terms and conditions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('estimate_number', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_info', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('order_number', models.PositiveIntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EstimateDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.CharField(blank=True, max_length=255, verbose_name='Mark')),
                ('width', models.DecimalField(decimal_places=2, max_digits=10, validators=[Store.models.validate_width])),
                ('height', models.DecimalField(decimal_places=2, max_digits=10, validators=[Store.models.validate_height])),
                ('quantity', models.PositiveIntegerField(default=1, validators=[Store.models.validate_positive])),
                ('markup', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)], verbose_name='Markup')),
                ('square_feet', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax_range', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Tax')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('configuration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.configuration')),
                ('estimate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Store.estimate')),
                ('frame_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.framecolor')),
                ('glass_coating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.glasscoating')),
                ('glass_color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.glasscolor')),
                ('glass_config', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.glassconfig')),
                ('glass_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.glasstype')),
                ('privacy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.privacy')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_number', models.AutoField(primary_key=True, serialize=False, verbose_name='PO')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('hold', 'Waiting for Approval'), ('approved', 'Scheduled'), ('in_production', 'Manufacturing'), ('delivered', 'Delivered'), ('canceled', 'Canceled')], default='hold', max_length=20)),
                ('changed_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('note_history', models.TextField(blank=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders_customer', to=settings.AUTH_USER_MODEL)),
                ('estimate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.estimate')),
                ('estimate_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.estimatedetail')),
            ],
        ),
        migrations.CreateModel(
            name='PriceAdjustment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('percentage_adjustment', models.DecimalField(decimal_places=2, max_digits=5)),
                ('estimate_detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Store.estimatedetail')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Store.brand')),
            ],
        ),
        migrations.AddField(
            model_name='privacy',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='privacies', to='Store.product'),
        ),
        migrations.AddField(
            model_name='glasstype',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glass_types', to='Store.product'),
        ),
        migrations.AddField(
            model_name='glassconfig',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glass_configs', to='Store.product'),
        ),
        migrations.AddField(
            model_name='glasscolor',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glass_colors', to='Store.product'),
        ),
        migrations.AddField(
            model_name='glasscoating',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='glass_coatings', to='Store.product'),
        ),
        migrations.AddField(
            model_name='framecolor',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frame_colors', to='Store.product'),
        ),
        migrations.AddField(
            model_name='estimatedetail',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Store.product'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='Store.product'),
        ),
        migrations.CreateModel(
            name='BasePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_price_per_square_foot', models.DecimalField(decimal_places=2, default=1.5, max_digits=5)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Store.product')),
            ],
        ),
        migrations.CreateModel(
            name='Serie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serie', models.CharField(max_length=255)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series', to='Store.product')),
            ],
        ),
        migrations.AddField(
            model_name='estimatedetail',
            name='serie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Store.serie'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='serie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='Store.serie'),
        ),
    ]
